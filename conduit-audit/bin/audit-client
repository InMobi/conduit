#!/bin/bash
#
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#


################################
# constants
################################

CLIENT_AUDIT_QUERY_CLASS="com.inmobi.conduit.audit.query.AuditDbQuery"
CLIENT_FEEDER_CLASS="com.inmobi.conduit.audit.AuditStats"
CLIENT_ADMIN_CLASS="com.inmobi.conduit.audit.AuditAdmin"

################################
# functions
################################

info() {
  local msg=$1

  echo "Info: $msg" >&2
}

warn() {
  local msg=$1

  echo "Warning: $msg" >&2
}

error() {
  local msg=$1
  local exit_code=$2

  echo "Error: $msg" >&2

  if [ -n "$exit_code" ] ; then
    exit $exit_code
  fi
}


display_help() {
  cat <<EOF
Usage: $0 audit [-group <TIER,HOSTNAME,TOPIC,CLUSTER>] 
          [-filter <TIER=xxx,HOSTNAME=xxx,TOPIC=xxx,CLUSTER=xxx>] [-percentile <comma separated list of percentiles>] <dd-mm-yyyy-HH:mm> <dd-mm-yyyy-HH:mm> --conf <confdir>
       $0 feeder start|stop --conf <confdir>
       $0 admin -rollup [-daily] -date <dd-mm-yyyy> [-n <number of days] --conf <confdir>
       $0 admin -create -date <dd-mm-yyyy> [-n <number of days] --conf <confdir>
       $0 admin -checkpoint [-daily] -date <dd-mm-yyyy> --conf <confdir>
       $0 admin -check -rolledup [-daily] -date <dd-mm-yyyy> [-n <num of days>] --conf <confdir>
       $0 admin -check -created -date <dd-mm-yyyy> [-n <num of days>] --conf <confdir>
EOF
}

run_client() {
  local CLIENT_APPLICATION_CLASS

  if [ "$#" -gt 0 ]; then
    CLIENT_APPLICATION_CLASS=$1
    shift
  else
    error "Must specify client application class" 1
  fi

  set -x
  exec $JAVA_HOME/bin/java $JAVA_OPTS  -Dsun.net.client.defaultConnectTimeout=60000 -Dsun.net.client.defaultReadTimeout=60000 -cp "$CLIENT_CLASSPATH" \
      "$CLIENT_APPLICATION_CLASS" $*
}

################################
# main
################################

# set default params
CLIENT_CLASSPATH=""
CLIENT_JAVA_LIBRARY_PATH=""
JAVA_OPTS="-Xmx128M"

opt_conf=""

mode=$1
shift

case "$mode" in
  help)
    display_help
    exit 0
    ;;
  audit)
    opt_audit=1
    ;;
  feeder)
    opt_feeder=1
    startStop=$1
    shift
    ;;
  admin)
    opt_admin=1
    ;;
  *)
    error "Unknown or unspecified command '$mode'"
    echo
    display_help
    exit 1
    ;;
esac

while [ -n "$*" ] ; do
  arg=$1
  shift

  case "$arg" in
    --conf|-c)
      [ -n "$1" ] || error "Option --conf requires an argument" 1
      opt_conf=$1
      shift
      ;;
    --classpath|-C)
      [ -n "$1" ] || error "Option --classpath requires an argument" 1
      CLIENT_CLASSPATH=$1
      shift
      ;;
    -D*)
      JAVA_OPTS="${JAVA_OPTS} $arg"
      ;;
    *)
      args="$args $arg"
      ;;
  esac
done

if [ -n "$opt_conf" ]; then
  envfile=$opt_conf/conduit-audit.env

  #check env existence
  if ! [ -r $envfile ]; then
    echo $envfile " not found."
    exit 1
  fi

  . $envfile
fi


# find java
if [ -z "${JAVA_HOME}" ] ; then
  echo "Warning: JAVA_HOME not set!"
    JAVA_DEFAULT=`type -p java`
    [ -n "$JAVA_DEFAULT" ] || error "Unable to find java executable. Is it in your PATH?" 1
    JAVA_HOME=$(cd $(dirname $JAVA_DEFAULT)/..; pwd)
fi

[ -n "${JAVA_HOME}" ] || error "Unable to find a suitable JAVA_HOME" 1

# figure out where the client distribution is
if [ -z "${CLIENT_HOME}" ] ; then
  CLIENT_HOME=$(cd $(dirname $0)/..; pwd)
fi
#echo CLIENT_HOME is $CLIENT_HOME


# Append to the classpath
if [ -n "${CLIENT_CLASSPATH}" ] ; then
  CLIENT_CLASSPATH="${CLIENT_HOME}/lib/*:$DEV_CLASSPATH:$CLIENT_CLASSPATH"
else
  CLIENT_CLASSPATH="${CLIENT_HOME}/lib/*:$DEV_CLASSPATH"
fi

# prepend conf dir to classpath
if [ -n "$opt_conf" ]; then
  CLIENT_CLASSPATH="$opt_conf:$CLIENT_CLASSPATH"
fi

if [ -z $HADOOP_HOME ]; then
  echo "Please define HADOOP_HOME to point to hadoop installation directory."
  exit 1
fi

#set classpath
for i in `hadoop classpath | sed "s/:/ /g"` ;do
  if [[ "$i" == *.jar ]]; then
    if [[ "$i" != *slf4j* ]]; then
      CLIENT_CLASSPATH=$CLIENT_CLASSPATH:$i;
    fi
  fi
done

# finally, invoke the appropriate command
if [ -n "$opt_audit" ] ; then
  run_client $CLIENT_AUDIT_QUERY_CLASS $args
else
  if [ -n "$opt_feeder" ] ; then

    #create PID dir
    if [ "$CONDUIT_FEEDER_PID_DIR" = "" ]; then
      CONDUIT_FEEDER_PID_DIR=/tmp/conduit-feeder
    fi
    export _CONDUIT_FEEDER_DAEMON_PIDFILE=$CONDUIT_FEEDER_PID_DIR/conduit-feeder.pid

    case $startStop in

      (start)

        mkdir -p "$CONDUIT_FEEDER_PID_DIR"

        if [ -f $_CONDUIT_FEEDER_DAEMON_PIDFILE ]; then
          if kill -0 `cat $_CONDUIT_FEEDER_DAEMON_PIDFILE` > /dev/null 2>&1; then
            echo FEEDER running as process `cat $_CONDUIT_FEEDER_DAEMON_PIDFILE`.  Stop it first.
            exit 1
          fi
        fi

        echo starting FEEDER

        exec $JAVA_HOME/bin/java $JAVA_OPTS  -Dsun.net.client.defaultConnectTimeout=60000 -Dsun.net.client.defaultReadTimeout=60000 -cp "$CLIENT_CLASSPATH" \
									 "$CLIENT_FEEDER_CLASS" $* &

        if [ $? -eq 0 ]; then
          if /bin/echo -n $! > "$_CONDUIT_FEEDER_DAEMON_PIDFILE";
          then
            sleep 1
            echo FEEDER STARTED
          else
            echo FAILED TO WRITE PID
            exit 1
          fi
        else
          echo FEEDER DID NOT START
          exit 1
        fi
        ;;

      (stop)

        if [ -f $_CONDUIT_FEEDER_DAEMON_PIDFILE ]; then
          if kill -0 `cat $_CONDUIT_FEEDER_DAEMON_PIDFILE` > /dev/null 2>&1; then
            echo -n Stopping FEEDER
            kill -s SIGTERM `cat $_CONDUIT_FEEDER_DAEMON_PIDFILE`
            while :
            do
             	if kill -0 `cat $_CONDUIT_FEEDER_DAEMON_PIDFILE` > /dev/null 2>&1; then
             		echo -n "."
                sleep 1
              else
                break
              fi
            done
            rm -rf  $_CONDUIT_FEEDER_DAEMON_PIDFILE
            echo -n DONE
          else
            echo no FEEDER to stop
          fi
        else
          echo no FEEDER to stop
        fi
        ;;

        (*)
        echo $usage
        exit 1
        ;;
    esac
  else
    if [ -n "$opt_admin" ] ; then
      run_client $CLIENT_ADMIN_CLASS $args
    else
      error "This message should never appear" 1
    fi
  fi
fi
exit 0
